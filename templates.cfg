###############################################################################
# TEMPLATES.CFG - SAMPLE OBJECT TEMPLATES
#
# Last Modified: 10-03-2007
#
# NOTES: This config file provides you with some example object definition
#        templates that are refered by other host, service, contact, etc.
#        definitions in other config files.
#       
#        You don't need to keep these definitions in a separate file from your
#        other object definitions.  This has been done just to make things
#        easier to understand.
#
###############################################################################
###############################################################################
###############################################################################
#
# CONTACT TEMPLATES
#
###############################################################################
###############################################################################
# Generic contact definition template - This is NOT a real contact, just a template!
define contact{
        name                            generic-contact    	; The name of this contact template
        service_notification_period     24x7			; service notifications can be sent anytime
        host_notification_period        24x7			; host notifications can be sent anytime
        service_notification_options    w,u,c,r,f,s		; send notifications for all service states, flapping events, and scheduled downtime events
        host_notification_options       d,u,r,f,s		; send notifications for all host states, flapping events, and scheduled downtime events
        service_notification_commands   notify-service-by-email	; send service notifications via email
        host_notification_commands      notify-host-by-email	; send host notifications via email
        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL CONTACT, JUST A TEMPLATE!
        }
###############################################################################
###############################################################################
#
# HOST TEMPLATES
#
################################################################################
################################################################################
# Generic host definition template - This is NOT a real host, just a template!
define host{
        name                            generic-host    ; The name of this host template
        notifications_enabled           1       	; Host notifications are enabled
        event_handler_enabled           1       	; Host event handler is enabled
        flap_detection_enabled          1       	; Flap detection is enabled
        process_perf_data               1       	; Process performance data
        retain_status_information       1       	; Retain status information across program restarts
        retain_nonstatus_information    1       	; Retain non-status information across program restarts
	notification_period		24x7		; Send host notifications at any time
        register                        0       	; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
	contact_groups	          admins
        }
# Unix host definition template - This is NOT a real host, just a template!
define host{
	name				unix-server	; The name of this host template
	use				generic-host	; This template inherits other values from the generic-host template
	check_period			24x7		; By default, Linux hosts are checked round the clock
	check_interval			10		; Actively check the host every 10 minutes
	retry_interval			1		; Schedule host check retries at 2 minute intervals
	max_check_attempts		3		; Check each Linux host 10 times (max)
        check_command           	check-host-alive ; Default command to check Linux hosts
	notification_period		workhours	; Linux admins hate to be woken up, so we only notify during the day
							; Note that the notification_period variable is being overridden from
							; the value that is inherited from the generic-host template!
	notification_interval		240		; Resend notifications every 2 hours
#	notification_options		d,u,r		; Only send notifications for specific host states
	notification_options		n		; Only send notifications for specific host states
#	contact_groups			admins		; Notifications get sent to the admins by default
	register			0		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
        event_handler			hostEvent
	}
define host{
	name				no-ping-device
	use				generic-host	; This template inherits other values from the generic-host template
	check_period			24x7		; By default, Linux hosts are checked round the clock
	check_interval			10		; Actively check the host every 10 minutes
	retry_interval			1		; Schedule host check retries at 2 minute intervals
	max_check_attempts		3		; Check each Linux host 10 times (max)
#        check_command           	check-host-alive ; Default command to check Linux hosts
	notification_period		workhours	; Linux admins hate to be woken up, so we only notify during the day
							; Note that the notification_period variable is being overridden from
							; the value that is inherited from the generic-host template!
	notification_interval		240		; Resend notifications every 2 hours
#	notification_options		d,u,r		; Only send notifications for specific host states
	notification_options		n		; Only send notifications for specific host states
	contact_groups			admins		; Notifications get sent to the admins by default
	register			0		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
        event_handler			hostEvent
	}
# Windows host definition template - This is NOT a real host, just a template!
define host{
	name			network-device	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, Windows servers are monitored round the clock
	check_interval		10	; Actively check the server every 10 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	3		; Check each server 3 times (max)
	check_command		check-host-alive	; Default command to check if servers are "alive"
	notification_period	24x7		; Send notification out at any time - day or night
	notification_interval	60		; Resend notifications every 30 minutes
	notification_options	d,r		; Only send notifications for specific host states
	contact_groups		admins		; Notifications get sent to the admins by default
	hostgroups		windows-servers ; Host groups that Windows servers should be a member of
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
        event_handler			netDevEvent
	}
define host{
	name			windows-server	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, Windows servers are monitored round the clock
	check_interval		10	; Actively check the server every 10 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	3		; Check each server 10 times (max)
	check_command		check-host-alive	; Default command to check if servers are "alive"
	notification_period	24x7		; Send notification out at any time - day or night
	notification_interval	60		; Resend notifications every 30 minutes
	notification_options	d,r		; Only send notifications for specific host states
	contact_groups		admins		; Notifications get sent to the admins by default
	hostgroups		windows-servers ; Host groups that Windows servers should be a member of
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
        event_handler			hostEvent
	}
define host{
	name			printer-device	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, Windows servers are monitored round the clock
	check_interval		10	; Actively check the server every 10 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	3		; Check each server 10 times (max)
	check_command		check-host-alive	; Default command to check if servers are "alive"
	notification_period	24x7		; Send notification out at any time - day or night
	notification_interval	60		; Resend notifications every 30 minutes
	notification_options	d,r		; Only send notifications for specific host states
	contact_groups		admins		; Notifications get sent to the admins by default
	hostgroups		windows-servers ; Host groups that Windows servers should be a member of
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
        event_handler			hostEvent
	}
define host{
	name			vmware-server	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, Windows servers are monitored round the clock
	check_interval		5	; Actively check the server every 5 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	2		; Check each server 2 times (max)
	check_command		check-host-alive	; Default command to check if servers are "alive"
	notification_period	24x7		; Send notification out at any time - day or night
	notification_interval	60		; Resend notifications every 30 minutes
	notification_options	d,r		; Only send notifications for specific host states
	contact_groups		admins		; Notifications get sent to the admins by default
	hostgroups		windows-servers ; Host groups that Windows servers should be a member of
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
        event_handler			hostEvent
	}
define host{
	name			IPTV-server	; The name of this host template
	use			generic-host	; Inherit default values from the generic-host template
	check_period		24x7		; By default, Windows servers are monitored round the clock
	check_interval		2	; Actively check the server every 2 minutes
	retry_interval		1		; Schedule host check retries at 1 minute intervals
	max_check_attempts	3		; Check each server 3 times (max)
	check_command		check-host-alive	; Default command to check if servers are "alive"
	notification_period	24x7		; Send notification out at any time - day or night
	notification_interval	60		; Resend notifications every 30 minutes
	notification_options	d,r		; Only send notifications for specific host states
	contact_groups		admins		; Notifications get sent to the admins by default
	hostgroups		windows-servers ; Host groups that Windows servers should be a member of
	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
        event_handler			hostEvent
	}
## We define a generic printer template that can be used for most printers we monitor
#define host{
#	name			generic-printer	; The name of this host template
#	use			generic-host	; Inherit default values from the generic-host template
#	check_period		24x7		; By default, printers are monitored round the clock
#	check_interval		5	; Actively check the printer every 5 minutes
#	retry_interval		1		; Schedule host check retries at 1 minute intervals
#	max_check_attempts	10		; Check each printer 10 times (max)
#	check_command		check-host-alive	; Default command to check if printers are "alive"
#	notification_period	workhours		; Printers are only used during the workday
#	notification_interval	60		; Resend notifications every 30 minutes
#	notification_options	d,r		; Only send notifications for specific host states
#	contact_groups		admins		; Notifications get sent to the admins by default
#	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
#	}
## Define a template for switches that we can reuse
#define host{
#	name			generic-switch	; The name of this host template
#	use			generic-host	; Inherit default values from the generic-host template
#	check_period		24x7		; By default, switches are monitored round the clock
#	check_interval		5	; Switches are checked every 5 minutes
#	retry_interval		1		; Schedule host check retries at 1 minute intervals
#	max_check_attempts	20		; Check each switch 10 times (max)
#	check_command		check-host-alive	; Default command to check if routers are "alive"
#	notification_period	24x7		; Send notifications at any time
#	notification_interval	60		; Resend notifications every 30 minutes
#	notification_options	d,r		; Only send notifications for specific host states
#	contact_groups		admins		; Notifications get sent to the admins by default
#	register		0		; DONT REGISTER THIS - ITS JUST A TEMPLATE
#	}
###############################################################################
###############################################################################
#
# SERVICE TEMPLATES
#
###############################################################################
###############################################################################
# Generic service definition template - This is NOT a real service, just a template!
define service{
        name                            generic-service 	; The 'name' of this service template
        active_checks_enabled           1       		; Active service checks are enabled
        passive_checks_enabled          1    		   	; Passive service checks are enabled/accepted
        parallelize_check               1       		; Active service checks should be parallelized (disabling this can lead to major performance problems)
        obsess_over_service             1       		; We should obsess over this service (if necessary)
        check_freshness                 0       		; Default is to NOT check service 'freshness'
        notifications_enabled           1       		; Service notifications are enabled
        event_handler_enabled           1       		; Service event handler is enabled
        flap_detection_enabled          1       		; Flap detection is enabled
        process_perf_data               1       		; Process performance data
        retain_status_information       1       		; Retain status information across program restarts
        retain_nonstatus_information    1       		; Retain non-status information across program restarts
        is_volatile                     0       		; The service is not volatile
        check_period                    24x7			; The service can be checked at any time of the day
        max_check_attempts              3			; Re-check the service up to 3 times in order to determine its final (hard) state
        normal_check_interval           10			; Check the service every 10 minutes under normal conditions
        retry_check_interval            2			; Re-check the service every two minutes until a hard state can be determined
        contact_groups                  admins			; Notifications get sent out to everyone in the 'admins' group
	notification_options		w,u,c,r			; Send notifications about warning, unknown, critical, and recovery events
        notification_interval           120		; Re-notify about service problems every hour
        notification_period             24x7			; Notifications can be sent out at any time
         register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        }
## Local service definition template - This is NOT a real service, just a template!
#define service{
#	name				local-service 		; The name of this service template
#	use				generic-service		; Inherit default values from the generic-service definition
#        max_check_attempts              4			; Re-check the service up to 4 times in order to determine its final (hard) state
#        normal_check_interval           5		; Check the service every 5 minutes under normal conditions
#        retry_check_interval            1			; Re-check the service every minute until a hard state can be determined
#        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
#	}
##define service{
##        name                            twp-service             ; The name of this service template
##        use                             generic-service         ; Inherit default values from the generic-service definition
##        max_check_attempts              1                       ; No re-check
##        normal_check_interval           10                      ; Check the service every 10 minutes under normal conditions
##        retry_check_interval            2                       ; Re-check the service every minute until a hard state can be determined
##        retry_interval                  2                       ; Re-check the service every 2 minutes while not in an OK state
##        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
##        }
define service{
        name                            3min-service-no-alerts
        use                             generic-service         ; Inherit default values from the generic-service definition
        max_check_attempts              3                       ; No re-check
        normal_check_interval           3                       ; Check the service every 5 minutes under normal conditions
        retry_check_interval            1                       ; Re-check the service every minute until a hard state can be determined
        retry_interval                  1                       ; Re-check the service every minute while not in an OK state
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        }
define service{
        name                            2min-service-no-alerts
        use                             generic-service         ; Inherit default values from the generic-service definition
        max_check_attempts              2                       ; No re-check
        normal_check_interval           2                     
        retry_check_interval            1                       ; Re-check the service every minute until a hard state can be determined
        retry_interval                  1                       ; Re-check the service every minute while not in an OK state
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        }
define service{
        name                            2min-service-with-alerts
        use                             2min-service-no-alerts
        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
	is_volatile			1
        event_handler			serviceEvent
        }
define service{
        name                            4min-service-no-alerts
        use                             generic-service         ; Inherit default values from the generic-service definition
        max_check_attempts              2                       ; No re-check
        normal_check_interval           4                     
        retry_check_interval            1                       ; Re-check the service every minute until a hard state can be determined
        retry_interval                  1                       ; Re-check the service every minute while not in an OK state
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        }
define service{
        name                            4min-service-with-alerts
        use                             4min-service-no-alerts
        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
	is_volatile			1
        event_handler			serviceEvent
        event_handler_enabled		1       
        }
define service{
        name                            5min-service-no-alerts
        use                             generic-service         ; Inherit default values from the generic-service definition
        max_check_attempts              3
        normal_check_interval           5                      ; Check the service every 5 minutes under normal conditions
        retry_check_interval            1                       ; Re-check the service every minute until a hard state can be determined
        retry_interval                  1                       ; Re-check the service every minute while not in an OK state
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        event_handler_enabled           0       		; Service event handler is not enabled
        }
define service{
        name                            10min-service-no-alerts
        use                             generic-service         ; Inherit default values from the generic-service definition
        max_check_attempts              2                       ; No re-check
        normal_check_interval           10                      ; Check the service every 10 minutes under normal conditions
        retry_check_interval            2                       ; Re-check the service every two minutes until a hard state can be determined
        retry_interval                  2                       ; Re-check the service every 2 minutes while not in an OK state
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        }
define service{
        name                            15min-service-no-alerts
        use                             generic-service         ; Inherit default values from the generic-service definition
        max_check_attempts              2                       ; No re-check
        normal_check_interval           15                      ; Check the service every 20 minutes under normal conditions
        retry_check_interval            2                       ; Re-check the service every two minutes until a hard state can be determined
        retry_interval                  2                       ; Re-check the service every 2 minutes while not in an OK state
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        }
define service{
        name                            20min-service-no-alerts
        use                             generic-service         ; Inherit default values from the generic-service definition
        max_check_attempts              2                       ; No re-check
        normal_check_interval           20                      ; Check the service every 20 minutes under normal conditions
        retry_check_interval            2                       ; Re-check the service every two minutes until a hard state can be determined
        retry_interval                  2                       ; Re-check the service every 2 minutes while not in an OK state
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        }
define service{
        name                            30min-service-no-alerts
        use                             generic-service         ; Inherit default values from the generic-service definition
        max_check_attempts              2                       ; No re-check
        normal_check_interval           30                      ; Check the service every 20 minutes under normal conditions
        retry_check_interval            2                       ; Re-check the service every two minutes until a hard state can be determined
        retry_interval                  2                       ; Re-check the service every 2 minutes while not in an OK state
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        }
define service{
        name                            5min-WPT-service
        use                             5min-service-no-alerts
        max_check_attempts              1                       ; No re-check
        }
define service{
        name                            10min-WPT-service
        use                             10min-service-no-alerts
        max_check_attempts              1                       ; No re-check
        }
define service{
        name                            15min-WPT-service
        use                             15min-service-no-alerts
        max_check_attempts              1                       ; No re-check
        }
define service{
        name                            30min-WPT-service
        use                             30min-service-no-alerts
        max_check_attempts              1                       ; No re-check
        }
define service{
        name                            60min-WPT-service
        use                             60min-service-no-alerts
        max_check_attempts              1                       ; No re-check
        }
define service{
        name                            60min-service-no-alerts
        use                             generic-service         ; Inherit default values from the generic-service definition
        max_check_attempts              2                       ; No re-check
        normal_check_interval           60                       ; Check the service every 60 minutes under normal conditions
        retry_check_interval            5                       ; Re-check the service every five minutes until a hard state can be determined
        retry_interval                  5                       ; Re-check the service every five minutes while not in an OK state
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        }
define service{
        name                            24hour-service-no-alerts
        use                             generic-service         ; Inherit default values from the generic-service definition
        max_check_attempts              1                       ; No re-check
        normal_check_interval           1440                     ; Check the service every 60 minutes under normal conditions
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        notifications_enabled           0       		; Service notifications are not enabled
	notification_interval		2880
        }
define service{
        name                            24hour-service-with-alerts
        use                             24hour-service-no-alerts
        max_check_attempts              1            	; Do not alert unless hard state has lasted for two samples
	is_volatile			1
        event_handler			serviceEvent
        }
# 
##define service{
##        name                            frequent-service-no-alerts
##        use                             10min-service-no-alerts
##        normal_check_interval		1
##        retry_check_interval            1
##        max_check_attempts              2
##        }
define service{
        name                            60sec-service-no-alerts
        use                             10min-service-no-alerts
        normal_check_interval		1
        retry_check_interval            1
        max_check_attempts              2
        }
##define service{
##        name                            alert-service
##        use                             10min-service-no-alerts
##        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
##	is_volatile			1
##        event_handler			serviceEvent
##        }
define service{
        name                            3min-service-with-alerts
        use                             3min-service-no-alerts
        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
	is_volatile			1
        event_handler			serviceEvent
        }
define service{
        name                            3min-service-with-alerts-netDev
        use                             3min-service-with-alerts
        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
        retry_check_interval            1                  
        event_handler			netDevEvent
        }
define service{
        name                            5min-service-with-alerts
        use                             5min-service-no-alerts
        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
	is_volatile			1
        event_handler			serviceEvent
        event_handler_enabled		1       
        }
define service{
        name                            10min-service-with-alerts
        use                             10min-service-no-alerts
        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
	is_volatile			1
        event_handler			serviceEvent
        }
define service{
        name                            15min-service-with-alerts
        use                             15min-service-no-alerts
        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
	is_volatile			1
        event_handler			serviceEvent
        }
define service{
        name                            20min-service-with-alerts
        use                             20min-service-no-alerts
        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
	is_volatile			1
        event_handler			serviceEvent
        }
define service{
        name                            30min-service-with-alerts
        use                             30min-service-no-alerts
        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
	is_volatile			1
        event_handler			serviceEvent
        }
define service{
        name                            60min-service-with-alerts
        use                             60min-service-no-alerts
        max_check_attempts              2            	; Do not alert unless hard state has lasted for two samples
	is_volatile			1
        event_handler			serviceEvent
        }
##define service{
##        name                            frequent-service-with-alerts
##	use				10min-service-with-alerts
##        normal_check_interval		1
##        retry_check_interval            1
##        max_check_attempts              2
##        }
define service{
        name                            60sec-service-with-alerts
	use				10min-service-with-alerts
        normal_check_interval		1
        retry_check_interval            1
        max_check_attempts              2
        }
##define service{
##        name                            30s-service-with-alerts
##	use				10min-service-with-alerts
##        normal_check_interval		1
##        retry_check_interval            1
##        max_check_attempts              2
##        }
#define service{
#        name                            30sec-service-with-alerts
#	use				10min-service-with-alerts
#        normal_check_interval		1
#        retry_check_interval            1
#        max_check_attempts              2
#        }
define service{
        name                            jmx-service
	use				10min-service-no-alerts
        normal_check_interval           5                     ; Check the service every 5 minutes under normal conditions
        }
define service{
        name                            jmx-service-4min
	use				10min-service-with-alerts
        normal_check_interval           4                      ; Check the service every 4 minutes under normal conditions
        }
define service{
        name                            jmx-service-6min
	use				10min-service-with-alerts
        normal_check_interval           6                      ; Check the service every 4 minutes under normal conditions
        }
define service{
        name                            selenium-service-4min
	use				4min-service-no-alerts
	max_check_attempts		2
	retry_check_interval		2
        }
define service{
        name                            jmx-service-2min
	use				10min-service-with-alerts
        normal_check_interval           2                      ; Check the service every 2 minutes under normal conditions
        }
define service{
        name                            unix-cpu             ; The name of this service template
	use				5min-service-with-alerts
        max_check_attempts              13            	; Do not alert unless hard state has lasted one hour         
        }
define service{
        name                            unix-cpu-no-alerts
	use				5min-service-no-alerts
        max_check_attempts              13            	; Do not alert unless hard state has lasted one hour         
        }
define service{
        name                            frequent-cpu-with-alerts
        use                             unix-cpu         ; Inherit default values from the twp-service definition
        normal_check_interval		1
        retry_check_interval            1
        }
define service{
        name                            frequent-cpu-no-alerts
	use				10min-service-no-alerts
        normal_check_interval		1
        retry_check_interval            1
        }
# passive check template - This is NOT a real service, just a template!
define service{
        use                     generic-service
        name                    passive_service
        active_checks_enabled   0
        passive_checks_enabled  1 # We want only passive checking
        flap_detection_enabled  0
        register                0 # This is a template, not a real service
        is_volatile             0
        check_period            24x7
        max_check_attempts      1
        normal_check_interval   10
        retry_check_interval    1
        check_freshness         0
        contact_groups          admins
        check_command           check_dummy!0
        notification_interval   120
        notification_period     24x7
        notification_options    w,u,c,r
        stalking_options        w,c,u
}

define service{
        use			passive_service
        name            	passive-service-with-alerts
        event_handler		serviceEvent
        is_volatile		1
	register		0
}

define service{
        use			passive_service
        name            	passive-service-with-alerts-netDev
        event_handler		netDevEvent
        is_volatile		1
}
define service{
        use                     generic-service
        name                    passive_JMX
        active_checks_enabled   0
        passive_checks_enabled  1 # We want only passive checking
        flap_detection_enabled  1
        register                0 # This is a template, not a real service
        check_period            24x7
        normal_check_interval   10
        retry_check_interval    1
        check_freshness         0
        contact_groups          admins
        check_command           check_dummy!0
        notification_interval   240
        notification_period     24x7
        notification_options    w,u,c,r
        stalking_options        w,c,u
        max_check_attempts      2            	; Do not alert unless hard state has lasted for two samples
	is_volatile		1
        event_handler		serviceEvent
}
